
----------------
EJERCICIO 1
-------------------


create or  replace function NumPag (pPortal in varchar2) return number 
is
numvisitas number(6);
existe   varchar2(1) := 'N';
begin
 
  begin 
    select 'S' into existe from portales where nombre  = pPortal;
  exception 
    when no_data_found then 
     numvisitas := -1;
  end;
  
  if existe = 'S' then 
  
            select sum(v.num_visitas) 
            into numvisitas
            from visitas v, paginas p
            where  p.id_pagina= v.id_pagina  and  p.nombre_portal = pPortal;
           
  end if;

return numvisitas;

end NumPag;


select nombre, numpag(nombre)
from portales;




----------------------
Ejercicio 2
--------------------

Create or replace procedure ModificaCodif  (tipoOrig in varchar2, tipoDes in varchar2) is 
begin

  if ( tipoOrig is null or tipoDes is  null )  then 
     raise_application_error (-20001,'Codificación NO VALIDA');
  else
    update paginas set codificacion = tipoDes where codificacion = tipoOrig;
   end if;
  
 end ModificaCodif;
 
 
 -------------------------------------
 Ejercicio 3
 ------------------------------------
 
 Create or replace  procedure NumeroVisitas  (pPortal in varchar2) is 
 
cursor C1 is  select  to_char(fecha_visita,'dd/mm/yyyy') as fecha, sum(num_visitas) as num_visitas     
               from visitas v, paginas p   where  p.id_pagina= v.id_pagina  and  p.nombre_portal = pPortal
              group by to_char(fecha_visita,'dd/mm/yyyy');


begin
 
For    rC in C1 LOOP 
    if rC.num_visitas < 5 then 
         dbms_output.put_line ('El portal '||pPortal||' ha tenido un número BAJO  de vistas el día '|| rC.fecha);
    else
       dbms_output.put_line ('El portal '||pPortal||' ha tenido un número ALTO de  vistas el día '|| rC.fecha);
    end if;
end loop;
 end NumeroVisitas;



 -------------------------------------
 Ejercicio 4
 ------------------------------------

DROP TABLEIMAGENES;

create table IMAGENES (nombre varchar2(50) not null,
                       imagen ORDImage,
constraint pk_imagenes primary key (nombre));



DECLARE
    x_imagen     ORDImage;
    CURSOR cursor1 is select nombre, imagen  from dbdm_ivan.imagenes_blob;

BEGIN
 for R in cursor1
 loop
      x_imagen:= ordsys.ordimage(ordsys.ordsource(R.imagen, null, null, null, null, 1),null, null, null, null, null, null, null);
      x_imagen.setProperties();
      insert into IMAGENES (nombre, imagen) values (R.nombre, x_imagen);
 end loop;
 COMMIT;
END;


 -------------------------------------
 Ejercicio 5
 ------------------------------------


CREATE OR REPLACE function  DimeMimeType (pnombre in varchar2) return varchar2  AS 

x_img ORDImage;

begin
    
  begin
     select imagen into x_img from imagenes where nombre = pnombre;    
     return  x_img.getMimeType(); 
    exception
       When no_data_found then 
          return 'XX';
   end;
   
end;

create or replace view v_MimeTypes as 
select  DimeMimeType (nombre) as Mime , count(*) as cantidad
from imagenes
group by  DimeMimeType (nombre);



 -------------------------------------
 Ejercicio 6
 ------------------------------------

CREATE OR REPLACE PROCEDURE CambiarFormato (pMaximo in number) AS 

CURSOR cursor1 is select nombre, imagen  from imagenes for update;

BEGIN
 for R in cursor1
 loop
     if r.imagen.getContentLength() > pMaximo and r.imagen.getFileFormat()<>'PNGF'  then 
        -- cambiamos a PNG
         r.imagen.process('fileFormat=PNGF'); 
        -- duplicamos imagen
         r.imagen.process('scale="2"');
         -- recalculamos propiedades
         r.imagen.setProperties();
        -- guardamos los cambios
          update imagenes set imagen = r.imagen where nombre = r.nombre;
          dbms_output.put_line ('cambiada la imagen '||r.nombre||' a PNG');
     end if;
 end loop;  
 COMMIT;
END;


